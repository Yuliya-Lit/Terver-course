from math import sqrt
import numpy as np

#1.Даны значения величины заработной платы заемщиков банка (zp) и значения их поведенческого кредитного скоринга (ks):
#zp = [35, 45, 190, 200, 40, 70, 54, 150, 120, 110],
#ks = [401, 574, 874, 919, 459, 739, 653, 902, 746, 832].
#Найдите ковариацию этих двух величин с помощью элементарных действий, а затем с помощью функции cov из numpy
#Полученные значения должны быть равны.
#Найдите коэффициент корреляции Пирсона с помощью ковариации и среднеквадратичных отклонений двух признаков,
#а затем с использованием функций из библиотек numpy и pandas.

zp = np.array([35, 45, 190, 200, 40, 70, 54, 150, 120, 110])
ks = np.array([401, 574, 874, 919, 459, 739, 653, 902, 746, 832])

covar = np.mean(zp*ks)-np.mean(zp)*np.mean(ks) # 9157.839999999997
print('ковариация по формуле',covar)
print('ковариация с использованием функции',np.cov(zp,ks,ddof=0)) # 9157.84
#[[ 3494.64  9157.84]
# [ 9157.84 30468.89]]

#несмещенное стандартное отклонение
std1 = np.std(zp,ddof=0) # 59.115480206118605
print('несмещенное стандартное отклонение выборки 1=',std1)
std2 = np.std(ks,ddof=0) # 174.55340157098058
print('несмещенное стандартное отклонение выборки 2=',std2)
print('коэффициент корреляции пирсона по формуле=',covar/(std1*std2)) # 0.8874900920739158
print('коэффициент корреляции пирсона, используя функцию=',np.corrcoef(zp,ks)) # 0.88749009
#[[1.         0.88749009]
# [0.88749009 1.        ]]

#2.Измерены значения IQ выборки студентов, обучающихся в местных технических вузах:
#131, 125, 115, 122, 131, 115, 107, 99, 125, 111.
#Известно, что в генеральной совокупности IQ распределен нормально.
#Найдите доверительный интервал для математического ожидания с надежностью 0.95.

L = [131, 125, 115, 122, 131, 115, 107, 99, 125, 111]
a2 = 0.05
n2 = len(L) # 10
M2 = round(sum(L)/n2,2) # 118.1

#несмещенное стандартное отклонение
std2 = np.std(L,ddof=1) # 10.54566788359614

#используем критерий стьюдента, так как дисперсия ген. совокупности неизвестна
#ищем по таблице для 9 степеней свободы (n-1) и а/2=0,025 получается Tt=2.262
tr2 = M2 + 2.262*(std2/sqrt(n2)) # 125.643
tl2 = M2 - 2.262*(std2/sqrt(n2)) # 110.557

print(f'Ответ 2. Доверительный интервал будет равен [{tl2:.3f};{tr2:.3f}]') # [110.557;125.643]

#3.Известно, что рост футболистов в сборной распределен нормально
#с дисперсией генеральной совокупности, равной 25 кв.см. Объем выборки равен 27,
#среднее выборочное составляет 174.2. Найдите доверительный интервал для математического ожидания с надежностью 0.95.

D3 = 25
n3 = 27
M3 = 174.2
a = 0.05

#используем z-критерий, так как известна дисперсия ген.совокупности
# 0,95 + а/2 = 0,975 - для этого значения z = +-1.96
#считаем по формуле расчетное значение
zr3 = M3 + 1.96*(sqrt(D3)/sqrt(n3)) # 176.086
zl3 = M3 - 1.96*(sqrt(D3)/sqrt(n3)) # 172.314

print(f'Ответ 3. Доверительный интервал будет равен [{zl3:.3f};{zr3:.3f}]') # [172.314;176.086]
