import scipy.stats as st
from math import sqrt

#1.Случайная непрерывная величина A имеет равномерное распределение на промежутке (200, 800].
#Найдите ее среднее значение и дисперсию.
a1 = 200
b1 = 800
M1 = (a1+b1)/2 # 500
D1 = ((b1-a1)**2)/12 #30000
print('1. среднее значение =',M1, ', дисперсия',D1) #М = 500, Д = 30000

#2. О случайной непрерывной равномерно распределенной величине B известно, что ее дисперсия равна 0.2.
#Можно ли найти правую границу величины B и ее среднее значение зная, что левая граница равна 0.5?
#Если да, найдите ее.
D2 = 0.2
a2 = 0.5
#M2 = (a2+b2)/2
#D2 = ((b2-a2)**2)/12
#12*0.2 = (b2 - 0.5)**2
# b**2 - b -2,15 = 0
discriminant = 1 - 4*1*(-2.15)
print(discriminant)
x1 = (1 + discriminant ** 0.5) / (2 * 1)
x2 = (1 - discriminant ** 0.5) / (2 * 1)
print('корни квадратного уравнения равны',x1,'и',x2)
print('корень 2.049193338482967 больше левой границы, значит это будет правая граница')
print('тогда М =',(a2+x1)/2) # 1.2745966692414834
print('или извлечем корень из дисперсии, тогда получится b = sqrt(D)*sqrt(12)+a')
b2 = sqrt(D2)*sqrt(12)+a2
print('b = ',b2) #2.049193338482967
print('тогда М =',(a2+b2)/2) # 1.2745966692414834

#3. Непрерывная случайная величина X распределена нормально и задана плотностью распределения
#f(x) = (1 / (4 * sqrt(2*pi))) * (exp((-(x+2)**2) / 32)).
#Найдите:
#а). M(X)
#б). D(X)
#в). std(X) (среднее квадратичное отклонение)

print('M(X) = -2') # -2
print('D(X) = 16') # 16
print('std(X) = 4') # 4

#4. Рост взрослого населения города X имеет нормальное распределение.
#Причем, средний рост равен 174 см, а среднее квадратичное отклонение равно 8 см.
#Какова вероятность того, что случайным образом выбранный взрослый человек имеет рост:
#а). больше 182 см
#б). больше 190 см
#в). от 166 см до 190 см
#г). от 166 см до 182 см
#д). от 158 см до 190 см
#е). не выше 150 см или не ниже 190 см
#ё). не выше 150 см или не ниже 198 см
#ж). ниже 166 см.
M4 = 174
S5 = 8
a = 182
print('4а. Значение',a,'отклоняется на',(a-M4)/S5,' сигмы.') # 1 сигма
print('по таблице 1 сигма = 0,8413')
print('тогда больше',a,'см - это', 1-0.8413) # 0.15869999999999995
print('проверка через функцию',1-st.norm.cdf((a-M4)/S5)) # 0.15865525393145707
b = 192
print('4б. Значение',b,'отклоняется на',(b-M4)/S5,' сигмы.') # 2.25 сигмы
print('по таблице 2,25 сигмы = 0,9878')
print('тогда больше',b,'см - это', 1-0.9878) # 0.012199999999999989
print('проверка через функцию',1-st.norm.cdf((b-M4)/S5)) # 0.012224472655044671
v1=166
v2=190
print('4в. Значение',v1,'отклоняется на',(v1-M4)/S5,' сигмы.') # -1 сигма
print('Значение',v2,'отклоняется на',(v2-M4)/S5,' сигмы.') # 1 сигмы
print('по таблице -1 сигма = 0,1587')
print('по таблице 2 сигмы = 0,9772')
print('тогда от',v1,'см до',v2,'см - это', 0.9772-0.1587) # 0.8185
print('проверка через функцию',st.norm.cdf((v2-M4)/S5)-st.norm.cdf((v1-M4)/S5)) # 0.8185946141203637
g1=166
g2=182
print('4г. Значение',g1,'отклоняется на',(g1-M4)/S5,' сигмы.') # -1 сигма
print('Значение',g2,'отклоняется на',(g2-M4)/S5,' сигмы.') # 1 сигмы
print('по таблице -1 сигма = 0,1587')
print('по таблице 1 сигмы = 0,8413')
print('тогда от',g1,'см до',g2,'см - это', 0.8413-0.1587) # 0.6826000000000001
print('проверка через функцию',st.norm.cdf((g2-M4)/S5)-st.norm.cdf((g1-M4)/S5)) # 0.6826894921370859
d1=158
d2=190
print('4д. Значение',d1,'отклоняется на',(d1-M4)/S5,' сигмы.') # -2 сигма
print('Значение',d2,'отклоняется на',(d2-M4)/S5,' сигмы.') # 2 сигмы
print('по таблице -2 сигма = 0,0228')
print('по таблице 2 сигмы = 0,9772')
print('тогда от',d1,'см до',d2,'см - это', 0.9772-0.0228) # 0.9543999999999999
print('проверка через функцию',st.norm.cdf((d2-M4)/S5)-st.norm.cdf((d1-M4)/S5)) # 0.9544997361036416
e1=150
e2=190
print('4е. Значение',e1,'отклоняется на',(e1-M4)/S5,' сигмы.') # -3 сигма
print('Значение',e2,'отклоняется на',(e2-M4)/S5,' сигмы.') # 2 сигмы
print('по таблице -3 сигма = 0,0014')
print('по таблице 2 сигмы = 0,9772')
print('тогда ниже',e1,'см и выше',e2,'см - это', (1-0.9772)+0.0014) # 0.02420000000000004
print('проверка через функцию',(1-st.norm.cdf((e2-M4)/S5))+st.norm.cdf((e1-M4)/S5)) # 0.0241000299798093
ee1=150
ee2=198
print('4ё. Значение',ee1,'отклоняется на',(ee1-M4)/S5,' сигмы.') # -3 сигма
print('Значение',ee2,'отклоняется на',(ee2-M4)/S5,' сигмы.') # 3 сигмы
print('по таблице -3 сигма = 0,0014')
print('по таблице 2 сигмы = 0,9986')
print('тогда ниже',ee1,'см и выше',ee2,'см - это', (1-0.9986)+0.0014) # 0.002799999999999957
print('проверка через функцию',(1-st.norm.cdf((ee2-M4)/S5))+st.norm.cdf((ee1-M4)/S5)) # 0.0026997960632601965
j = 166
print('4ж. Значение',j,'отклоняется на',(j-M4)/S5,' сигмы.') # -1 сигма
print('по таблице 1 сигма = 0,1587')
print('тогда больше',j,'см - это', 0.1587) # 0.1587
print('проверка через функцию',st.norm.cdf((j-M4)/S5)) # 0.15865525393145707

#5. На сколько сигм (средних квадратичных отклонений) отклоняется рост человека, равный 190 см, от
#математического ожидания роста в популяции, в которой M(X) = 178 см и D(X) = 25 кв.см?
M5=178
D5=25
x5=190

s5 = sqrt(D5)
print('5. Рост человека отклоняется на',(190-178)/s5, 'сигмы.') # 2.4

